%!PS-Adobe-3.0 EPSF-3.0
%%Title: (061-078Jantorre)
%%Version: 1 4
%%Creator: (Adobe PageMaker 6.52)
%%CreationDate: (D:20020910185459+02'00')
%%For: (RSCHERFF)
%%DocumentData: Clean7Bit
%%BoundingBox: 24 126 286 555
%%Pages: 0
%%DocumentProcessColors: Black
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EndComments
24 126 moveto 286 126 lineto 286 555 lineto 24 555 lineto closepath clip newpath
%%BeginProlog
%%EndProlog
%%BeginSetup
%%BeginResource: file Pscript_CFF PSVER
userdict/ct_CffDict 6 dict put ct_CffDict begin/F0Subr{systemdict/internaldict
known{1183615869 systemdict/internaldict get exec/FlxProc known{save true}{
false}ifelse}{userdict/internaldict known not{userdict/internaldict{count 0 eq
{/internaldict errordict/invalidaccess get exec}if dup type/integertype ne{
/internaldict errordict/invalidaccess get exec}if dup 1183615869 eq{pop 0}{
/internaldict errordict/invalidaccess get exec}ifelse}dup 14 get 1 25 dict put
bind executeonly put}if 1183615869 userdict/internaldict get exec/FlxProc
known{save true}{false}ifelse}ifelse[systemdict/internaldict known not{100
dict/begin cvx/mtx matrix/def cvx}if systemdict/currentpacking known{
currentpacking true setpacking}if{systemdict/internaldict known{1183615869
systemdict/internaldict get exec dup/$FlxDict known not{dup dup length exch
maxlength eq{pop userdict dup/$FlxDict known not{100 dict begin/mtx matrix def
dup/$FlxDict currentdict put end}if}{100 dict begin/mtx matrix def dup
/$FlxDict currentdict put end}ifelse}if/$FlxDict get begin}if grestore/exdef{
exch def}def/dmin exch abs 100 div def/epX exdef/epY exdef/c4y2 exdef/c4x2
exdef/c4y1 exdef/c4x1 exdef/c4y0 exdef/c4x0 exdef/c3y2 exdef/c3x2 exdef/c3y1
exdef/c3x1 exdef/c3y0 exdef/c3x0 exdef/c1y2 exdef/c1x2 exdef/c2x2 c4x2 def
/c2y2 c4y2 def/yflag c1y2 c3y2 sub abs c1x2 c3x2 sub abs gt def/PickCoords{{
c1x0 c1y0 c1x1 c1y1 c1x2 c1y2 c2x0 c2y0 c2x1 c2y1 c2x2 c2y2}{c3x0 c3y0 c3x1
c3y1 c3x2 c3y2 c4x0 c4y0 c4x1 c4y1 c4x2 c4y2}ifelse/y5 exdef/x5 exdef/y4 exdef
/x4 exdef/y3 exdef/x3 exdef/y2 exdef/x2 exdef/y1 exdef/x1 exdef/y0 exdef/x0
exdef}def mtx currentmatrix pop mtx 0 get abs 1e-05 lt mtx 3 get abs 1e-05 lt
or{/flipXY -1 def}{mtx 1 get abs 1e-05 lt mtx 2 get abs 1e-05 lt or{/flipXY 1
def}{/flipXY 0 def}ifelse}ifelse/erosion 1 def systemdict/internaldict known{
1183615869 systemdict/internaldict get exec dup/erosion known{/erosion get
/erosion exch def}{pop}ifelse}if yflag{flipXY 0 eq c3y2 c4y2 eq or{false
PickCoords}{/shrink c3y2 c4y2 eq{0}{c1y2 c4y2 sub c3y2 c4y2 sub div abs}ifelse
def/yshrink{c4y2 sub shrink mul c4y2 add}def/c1y0 c3y0 yshrink def/c1y1 c3y1
yshrink def/c2y0 c4y0 yshrink def/c2y1 c4y1 yshrink def/c1x0 c3x0 def/c1x1
c3x1 def/c2x0 c4x0 def/c2x1 c4x1 def/dY 0 c3y2 c1y2 sub round dtransform
flipXY 1 eq{exch}if pop abs def dY dmin lt PickCoords y2 c1y2 sub abs .001 gt{
c1x2 c1y2 transform flipXY 1 eq{exch}if/cx exch def/cy exch def/dY 0 y2 c1y2
sub round dtransform flipXY 1 eq{exch}if pop def dY round dup 0 ne{/dY exdef}{
pop dY 0 lt{-1}{1}ifelse/dY exdef}ifelse/erode PaintType 2 ne erosion .5 ge
and def erode{/cy cy .5 sub def}if/ey cy dY add def/ey ey ceiling ey sub ey
floor add def erode{/ey ey .5 add def}if ey cx flipXY 1 eq{exch}if itransform
exch pop y2 sub/eShift exch def/y1 y1 eShift add def/y2 y2 eShift add def/y3
y3 eShift add def}if}ifelse}{flipXY 0 eq c3x2 c4x2 eq or{false PickCoords}{
/shrink c3x2 c4x2 eq{0}{c1x2 c4x2 sub c3x2 c4x2 sub div abs}ifelse def/xshrink
{c4x2 sub shrink mul c4x2 add}def/c1x0 c3x0 xshrink def/c1x1 c3x1 xshrink def
/c2x0 c4x0 xshrink def/c2x1 c4x1 xshrink def/c1y0 c3y0 def/c1y1 c3y1 def/c2y0
c4y0 def/c2y1 c4y1 def/dX c3x2 c1x2 sub round 0 dtransform flipXY -1 eq{exch}
if pop abs def dX dmin lt PickCoords x2 c1x2 sub abs .001 gt{c1x2 c1y2
transform flipXY -1 eq{exch}if/cy exch def/cx exch def/dX x2 c1x2 sub round 0
dtransform flipXY -1 eq{exch}if pop def dX round dup 0 ne{/dX exdef}{pop dX 0
lt{-1}{1}ifelse/dX exdef}ifelse/erode PaintType 2 ne erosion .5 ge and def
erode{/cx cx .5 sub def}if/ex cx dX add def/ex ex ceiling ex sub ex floor add
def erode{/ex ex .5 add def}if ex cy flipXY -1 eq{exch}if itransform pop x2
sub/eShift exch def/x1 x1 eShift add def/x2 x2 eShift add def/x3 x3 eShift add
def}if}ifelse}ifelse x2 x5 eq y2 y5 eq or{x5 y5 lineto}{x0 y0 x1 y1 x2 y2
curveto x3 y3 x4 y4 x5 y5 curveto}ifelse epY epX}systemdict/currentpacking
known{exch setpacking}if/exec cvx/end cvx]cvx executeonly exch{pop true exch
restore}{systemdict/internaldict known not{1183615869 userdict/internaldict
get exec exch/FlxProc exch put true}{1183615869 systemdict/internaldict get
exec dup length exch maxlength eq{false}{1183615869 systemdict/internaldict
get exec exch/FlxProc exch put true}ifelse}ifelse}ifelse{systemdict
/internaldict known{1183615869 systemdict/internaldict get exec/FlxProc get
exec}{1183615869 userdict/internaldict get exec/FlxProc get exec}ifelse}if}
executeonly def/F1Subr{gsave currentpoint newpath moveto}bind def/F2Subr{
currentpoint grestore gsave currentpoint newpath moveto}bind def/HSSubr{
systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}bind def end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 5.0 6
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 160 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/findRes/setSA/pl
%% to keep CoolType entries in GlyphDirProcs safe from collisions with Win PS driver
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil
%%Copyright: Copyright 1993-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 4.0 2
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: l2compat
%%Version: 5.0 10
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: Level 1 emulation of level 2 operators
/setcmykcolor isdefined? not
{
/setcmykcolor {
1 sub 4 1 roll
3 {
3 index add neg dup 0 lt { pop 0 } if
3 1 roll
} repeat
setrgbcolor
pop
} bd
} if
/rectclip isdefined? not
{
/rectclip { newpath re clip newpath } bd
} if
/rectfill isdefined? not
{
/rectfill { gsave newpath re fill grestore } bd
} if
/sethalftone isdefined? not
{
/sethalftone {
begin
HalftoneType 1 eq
{ Frequency Angle /SpotFunction load setscreen }
if
end
} bd
} if
Level1?
{
/pdf_show {show} bd
/xshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xshow
} bd
/yshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_yshow
} bd
/xyshow
{
PDFVars /_pdf_showproc /pdf_show load put
pdf_xyshow
} bd
} if
/getrampcolor {
/indx exch def
[
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
]
L1setcolor
} bd
/sssetbackground { L1setcolor } bd
%%EndResource
%%BeginResource: procset pdf
%%Version: 5.0 7
%%Copyright: Copyright 1998-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 lt
{
c1x c1y r1 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 le
{
c2x c2y r2 360 0 arcn
xMin yMin moveto
xMax yMin lineto
xMax yMax lineto
xMin yMax lineto
xMin yMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
%%EndResource
%%BeginResource: procset sep_ops
%%Version: 4.0 1
%%Copyright: Copyright 1987-1999 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Support for Separations in Level 1, following the conventions of Tech Note 5044
userdict /sep_ops 50 dict dup begin put
/bdef {bind def} bind def
/xdef {exch def} bdef
/colorimagebuffer {
0 1 2 index length 1 sub {
dup 2 index exch get 255 exch sub 2 index 3 1 roll put
} for
} bdef
/addprocs {
[ 3 1 roll
/exec load
dup 3 1 roll
] cvx
} bdef
/L1? {
systemdict /languagelevel known {
systemdict /languagelevel get 2 lt
}{
true
} ifelse
} bdef
/colorexists {
statusdict /processcolors known {
statusdict /processcolors get exec
}{
/deviceinfo where {
pop deviceinfo /Colors known {
deviceinfo /Colors get
statusdict /processcolors {
deviceinfo /Colors known {
deviceinfo /Colors get
}{
1
} ifelse
} put
}{
1
} ifelse
}{
1
} ifelse
} ifelse
1 gt
} bdef
/colorplate colorexists { 0 } { 5 } ifelse def
/negativecolorplate false def
/setcmykcolor where {
pop
gsave
1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
4 {4 copy} repeat
grestore
1 dict begin
/foureq {
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
4 index eq 8 1 roll
pop pop pop pop and and and
} def
1 0 0 0 foureq {/colorplate 1 store} if
0 1 0 0 foureq {/colorplate 2 store} if
0 0 1 0 foureq {/colorplate 3 store} if
0 0 0 1 foureq {/colorplate 4 store} if
0 0 0 0 foureq {/colorplate 6 store} if
end
} if
0 systemdict /currenttransfer get exec exec
1 systemdict /currenttransfer get exec exec
2 copy
eq
{
/colorplate 6 store
pop
/negativecolorplate exch 0.5 lt store
}
{
gt /negativecolorplate exch store
}
ifelse
/findcmykcustomcolor where { pop }
{
/findcmykcustomcolor {
[ 6 1 roll ] readonly
} bdef
} ifelse
/setoverprint where {
pop
}{
/setoverprint {
pop
} bdef
} ifelse
/currentoverprint where {
pop
}{
/currentoverprint {
false
} bdef
} ifelse
/setcustomcolor where {
pop
}{
L1? {
/setcustomcolor {
exch
aload pop pop
4 { 4 index mul 4 1 roll } repeat
5 -1 roll pop
setcmykcolor
} bdef
}{
/setcustomcolor {
exch
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace setcolor
} bdef
} ifelse
} ifelse
/ik 0 def
/iy 0 def
/im 0 def
/ic 0 def
/imagetint {
ic .3 mul
im .59 mul
iy .11 mul
ik add add add dup
1 gt {pop 1} if
} bdef
/setcmykcolor where {
pop
}{
/setcmykcolor {
/ik xdef /iy xdef /im xdef /ic xdef
imagetint
1 exch sub setgray
} bdef
} ifelse
/customcolorimage where {
pop
}{
L1? {
/customcolorimage{
gsave
colorexists {
aload pop pop
/ik xdef /iy xdef /im xdef /ic xdef
currentcolortransfer
{ik mul ik sub 1 add} addprocs
4 1 roll {iy mul iy sub 1 add} addprocs
4 1 roll {im mul im sub 1 add} addprocs
4 1 roll {ic mul ic sub 1 add} addprocs
4 1 roll setcolortransfer
/magentabuf 0 string def
/yellowbuf 0 string def
/blackbuf 0 string def
{
colorimagebuffer dup length magentabuf length ne
{
dup length dup dup
/magentabuf exch string def
/yellowbuf exch string def
/blackbuf exch string def
} if
dup magentabuf copy yellowbuf copy
blackbuf copy pop
} addprocs
{magentabuf}{yellowbuf}{blackbuf} true 4 colorimage
}{
aload pop pop /ik xdef /iy xdef /im xdef /ic xdef /tint
imagetint def
currenttransfer
{tint mul 1 tint sub add} addprocs settransfer image
} ifelse
grestore
} bdef
}{
/customcolorimage {
gsave
[ exch /Separation exch dup 4 get exch /DeviceCMYK exch
0 4 getinterval
[ exch /dup load exch cvx {mul exch dup}
/forall load /pop load dup] cvx
] setcolorspace
10 dict begin
/ImageType 1 def
/DataSource exch def
/ImageMatrix exch def
/BitsPerComponent exch def
/Height exch def
/Width exch def
/Decode [1 0] def
currentdict end
image
grestore
} bdef
} ifelse
} ifelse
/setseparationgray where {
pop
}{
L1? {
/setseparationgray { 1 exch sub dup dup dup setcmykcolor } bdef
}{
/setseparationgray {
[/Separation /All /DeviceCMYK {dup dup dup}] setcolorspace
1 exch sub setcolor
} bdef
} ifelse
} ifelse
/separationimage where { pop }
{
/separationimage {
gsave
1 1 1 1 (All)
findcmykcustomcolor customcolorimage
grestore
} bdef
} ifelse
currentdict readonly pop end
%%EndResource
%%BeginResource: procset pdflev15044
%%Version: 5.0 13
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%LanguageLevel: 1
%%Title: PDF operators, Level 1, with emulated separations (TN 5044)
/_ColorSep5044? true dd
/docinitialize {
PDF begin
/_defaulthalftone
/currenthalftone where
{ pop currenthalftone }
{ 4 dict dup begin
currentscreen
/SpotFunction exch def
/Angle exch def
/Frequency exch def
/HalftoneType 1 def
end }
ifelse
dd
/currentcolortransfer where
{ pop /_defaultcolortransfer [ currentcolortransfer ] dd }
{ /_defaultcolortransfer [currenttransfer dup dup dup] dd }
ifelse
end
} bd
/initialize {
/overprintstack null dd
sep_ops begin
50 dict begin
_defaulthalftone sethalftone
} bd
/terminate {
end end
} bd
/currentcolortransfer where
{ pop }
{
/setcolortransfer
{
settransfer pop pop pop
} bd
} ifelse
/pl {
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} bd
/m { _sa? { pl } if moveto } bd
/l { _sa? { pl } if lineto } bd
/c
{
_sa? {3 {pl 6 2 roll} repeat} if
curveto
} bd
/ri/pop ld
/setSA { /_sa? xdd } bd
/re
{
_sa?
{
8 dict begin
/:h exch def
/:w exch def
/:y exch def
/:x exch def
:x :y pl
/:ymin exch def /:xmin exch def
:x :w add :y :h add pl
/:ymax exch def /:xmax exch def
:xmin :ymin moveto
:xmax :ymin lineto
:xmax :ymax lineto
:xmin :ymax lineto
closepath
end
}
{
4 2 roll moveto
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
closepath
} ifelse
} bd
/q
{
gsave
[currentoverprint overprintstack] /overprintstack xdd
}
[/overprintstack] bld
/Q
{
overprintstack aload pop /overprintstack xdd setoverprint
grestore
}
[/overprintstack] bld
/AlmostFull?
{ dup maxlength exch length sub 2 le
} bd
/Expand
{ 1 index maxlength mul cvi dict
dup begin exch { def } forall end
} bd
/xput
{ 3 2 roll
dup 3 index known not
{ dup AlmostFull? { 1.5 Expand } if
} if
dup 4 2 roll put
} bd
/defineRes
{ _categories 1 index known not
{ /_categories _categories 2 index 10 dict xput store
} if
_categories exch 2 copy get 5 -1 roll 4 index xput put
} bd
/findRes {
_categories exch get exch get
} bd
/L1setcolor {
aload length
dup 0 eq
{ pop .5 setgray }
{ dup 1 eq
{ pop setgray }
{ 3 eq
{ setrgbcolor }
{ setcmykcolor }
ifelse }
ifelse }
ifelse
} bind dd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
colorplate 0 eq
{
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} if
colorplate 1 ge colorplate 4 le and
{
4 colorplate sub index 4 { exch pop } repeat
concatandsettransfer
} if
colorplate 5 ge
{
0 index 4 { exch pop } repeat
concatandsettransfer
} if
} bd
/tn5044sethalftone
{
begin
HalftoneType 5 eq
{ [/Default /Cyan /Magenta /Yellow /Black /Default /Default /Default]
colorplate get
here not {
/Default here not { currentdict } if
} if
}
{ currentdict }
ifelse
end
begin
/TransferFunction here
{
concatandsettransfer
currentdict dup length dict
begin
{
1 index /TransferFunction ne { def } { pop pop } ifelse
} forall
currentdict
end
}
{
currentdict
} ifelse
end
sethalftone
} bd
/paintimage
{
colorplate 0 eq
{
{ {currentfile cyanstr readstring pop}
{currentfile magentastr readstring pop}
{currentfile yellowstr readstring pop}
{currentfile blackstr readstring pop
currentfile graystr readstring pop pop}
}
{ {currentfile cyanstr readhexstring pop}
{currentfile magentastr readhexstring pop}
{currentfile yellowstr readhexstring pop}
{currentfile blackstr readhexstring pop
currentfile graystr readhexstring pop pop}
} ifelse
true 4 colorimage
}
{
3 dict begin
/binaryOK exch def
[
1 1 5 {
dup
/currentfile cvx
[ /cyanstr /magentastr /yellowstr /blackstr /graystr ]
3 -1 roll 1 sub get cvx
binaryOK { /readstring } { /readhexstring } ifelse cvx
/pop cvx
5 -1 roll
colorplate dup 5 gt { pop 5 } if
eq not { /pop cvx } if
} for
] cvx bind
end
[
colorplate 6 eq {
/pop cvx
negativecolorplate { 0 } { 1 } ifelse
} if
colorplate 4 le
{
1 /exch cvx /sub cvx
} if
colorplate 6 ne
{
systemdict /currenttransfer get exec
aload pop
} if
] cvx
gsave
systemdict /settransfer get exec
systemdict /image get exec
grestore
} ifelse
} bd
%%EndResource
%%BeginResource: procset pdftext
%%Version: 5.0 6
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec
%%IncludeResource Helvetica-Bold
[/N11/Helvetica-Bold -1 TZ
%%IncludeResource Times-Italic
[ 0 /grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek
/caron/dotlessi 32 /space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/bullet/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/bullet/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N12/Times-Italic -1 TZ
%%IncludeResource Times-Italic
[/N14/Times-Italic -1 TZ
%%IncludeResource Times-Roman
[ 0 /grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek
/caron/dotlessi 32 /space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/bullet/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/bullet/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N15/Times-Roman -1 TZ
%%IncludeResource Symbol
[/N16/Symbol -1 TZ
%%IncludeResource Times-Roman
[/N23/Times-Roman -1 TZ
%%IncludeResource Helvetica
[/N24/Helvetica -1 TZ
PDFVars/TermAll get exec end end

%%EndSetup
PDFVars begin PDF begin PDFVars/InitAll get exec
24 126 262 428 rectclip
%%BeginResource: font CMLAHA+Futura-Book
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 16 dict dup begin
/Notice (Copyright (c) 1987, 1991, 1993 Adobe Systems Incorporated.  All Rights Reserved.Futura is a registered trademark of Fundicion Tipografica Neufville S. A.) def
/version (001.002) def
/FullName (Futura Book Oblique) def
/FamilyName (Futura) def
/BaseFontName (Futura-Book) def
/Weight (Book) def
/ItalicAngle -9 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /CMLAHA+Futura-Book def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -161 -293 1178 1006 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC67F973A7D
D910BBCA8FA950CADA53428D6A05E03FC36240446596E9CE8C00741062BC2225
21BE3ACEBBC0E52B5DBF08A16A533A1006532B48C5B0C609587B7664D3ED28D3
498C000D1A6EDC1803276B85D2EA91BA82A38289E339681369EC118B310B1B22
D650A646D98D39314CDB5674512440C625A60A8E62638FAABC319D14995E3889
E0BD7715F32ACD98071CB3721F1818ECEC343081F89B0878851CF581325757D7
1CC2A54E1113F45E6C506DDF4A3DCFAAEBFD4066E58FC93BB8444D4A365C12CF
8A7AB1ED8E8432B8991AD1E087D2C8989C310080359A855032A4AFE0EED9D393
8086C66C12ED116B33F3D8478E4C3747A99F647F8DC9624736262EF72FBBCC21
19BCF4D7F3FF7859DAD186BABB1AEB7A1AD87478BF02E3F393C984DC5D7DD8E6
7A8A5669CEA9F906CE5778965204D2312A45172F082B729A50FE3669BDED632D
F9C725A393799174332F716E14790215ACA3B2BCC4B1EEC6D9A50B8569E530EB
AA1D1BCF7DCD4947EC4B347162FC0B360366E059979F290C0B6F7ADD50B48ED0
D6810B51A5A007E81A48617D1C1794FBACCDEBB5AAEE3A6F78B07541288B06B7
6E1092FD85C4E868FBB5CD96424F6AD90B55CC3E2548050F3A7DF8A43A579503
D4E990B5C4C2D04B08080B006E8E7EC38CEBA4BE70BEF5B3D1AFFEE69FA1208A
293A0905C08D3D0FC0CB5AA4C0A1EE7E05A29D49DD6CCAF17F58E884D421244A
5667A404221768731869D558C44A0422235C5E5FEDE87D8AC0CAD77E58C86633
A409C1196540122FCB4801414EB7CB011F71DD3FECCA46A6F9D13AAE47DBAA66
E5507B70535E0B2C2D31AE496A2A1233E99C0E22AE295C40EBB07165FBAB47F5
B3F47A61FA9ABF0B17712F2E7887F6E770F3B0A58E4726AC6E41F76982C839A5
A6A6CC5F6B5461BED4AD940B449B748504D4D64FEAFCE75FC6666651DB1CB68D
E1450BEEE26AC4B89F432E4BFEA6D8952BE357C7B1CAA9AAA09A87A8D2AE94E3
54E656A0EE959445C6EA371E5D55D523D55A99EADF6FE845037CC2A9615F2F91
682BBB55AD72DF1D7F7F05E5DCFF5CAD9B770643B610D727CEA341A7DE504568
C288399BA2285D1D33CF6BB7B745C16540E74C87FAD1CDC211D0A96D57795F21
C2EADE8948A7A111322072768F0A7610519EDEC14C255BA8F7A483D40E480E1E
5ECC28119D93AF12B49FF94F6D8A0BE1CFB8233E1FBF890EA062501BCACB5F28
480D9AD66D36A8E3EAEBBA74151E472306DFFFE3F5A8C5AD3111D293CB4959F3
B8ABEA7376878DA61EEAEB35B3FFFD507515BAE9D1B5DC13E84E11690358AA2E
0CDC7CB4212AFC75BAC369A88F24BDDBA092E41F8416FDCFA603F1A5F1C519A5
15BEA0CA39888B22AA73FAE5A98DE0F11B9EA5293A5CFD30B3CAC8544873776A
0AA2733744E2934684DBF161AEFAD54776F55A1A20E90979CED0E1B1D3F8031E
A81A887D298B95C53EB2EF9A1E6B7B49556C40E3190AC7F755CC6DBD94977451
E600068960644E0BC84AE44524C1E566C2A13AF7D3E60747748E61DB18C7CAE1
347695DEF31031147B63BFA0FB313434E8D232AE8DA38AC6DE9814AC43294D84
B70459422B9D01DC0503585081A1AB10D1F929BAF35C394A0E1311DD2E2983CB
EC6E7DF0507A180EBA0DEB3A8BBD5FC5C4C3DD1CEE9430C8948EBDD901A7F660
80F0CCC9950337F56C1C54C90D0E98BE394D050EF38BD1953F4879A9E138EE55
F0643FD790F8A67B8385D49162BB1D0B9D53A1F126CC243DC5CDB46CCEFD1F6C
B37CF848C81D53A52F50DC32D7BC3F94C46645ECDA75FC1979AC45E37E38230D
19C1FF179F992AE6DA9067C2601C6342D56F08E7632228591EC2A1D228B19E58
2A991DA78555FBDC8BF489980CA960636D0E3F6A383C17B0E24A06A395D45B37
54E80E0574B126D1E9A0837A6743E36B81397BD36EDADB8944230AB2076B3BD0
3CA1B959AB7272681FC8D28195E57B3315F319D6488118FCDFD2FFE5C82BCC41
F0C556A06D810D72244ECFC150E3AD4ACB540FB27921F3F1EBE449BA8A08621C
6ED13D153AEFE7C32CD2B0417A399AB93D8885740752FB91817FC03CAF432844
A1DBB0A47CC52EBA55A598148BB1A9ED026E3F6C68C2FE00F6405FF69B6DA71D
6FFFDFCF4D9F27EE5504E7BA211DEBB4C3164D0ED0E38C4A38DB9770A78CACF8
BEEC788872A6070373C8D0B070288CF5286406F9787C125018A98AA932F3EC95
9532A0FF6AFCFE8039A5E58291B1CFC99FC40043D779524BC9D842803F8EECE9
674A09FDB883FB499CFA2C5A7E61C4DA3423F23262512D7C803AE8987E282CCB
5FE81892FFBA6353F75F3F7336D44DF52CF5634A2B507404A4F32D8C67059FC4
AA3E945E132EB89CF7F88EE2853C039E7C77171F9B03A0CED7B69737AFF0ED0A
8214ACAF214C811DFAD0E26062064DF22CAFFF14B8AC35032C110E0EDA5E59E4
49CCF8888AE109C95A30AB2DF3068E903884BE940CFFAF25BC51BCAF2E057003
2B65A2DA99DAAA4886A4B05D68522453B5EC4F56D302FC27CEBE3C3BA215B472
D1D21E54975FA08382B4C717B904DC86E24BD82DB48EFB9F180C0926406DBA3E
94D41C4929B3A6E391510E39C232BA21614C2277123EB3CF203D60D5A50F5A7A
58632C2C0B09CDD259AAC20F274173C34DDC2B8B6A7552AF8040C67BA79A628D
1EFA8B6D46B5BED7AB908973E05ABB4841206800844091D34080479B33A82488
487E3C2D7335B1C2DD3ACBB62D8BE7AE4FB6AADC4C07FD243C6903E14CFE3A3B
38158DD1B125C097220FEC109CB5CCE43468AC923142EB142239E8A4EC1B7C14
69D77265B18512B3F07DD616DCEB0C166902D66CE8288EB70FF8BC94FDC5CF18
CACA0AD16280AEB8CC41DD730B0C7CD8CD71EA95DD92D4B127414D6CF055638D
01592DCE5EA72C001E8F20321CF4D96F1DEEE9AB67C4BDACD71A73B88A556423
CB09157BCA38DD94C51298CC0019BB3CB7D85499E71979878FD0C6D5A4D9E066
EBCDE00EAF1AD3AC845E125E45570ED39439EA66E0C8BEE46B14E2811B5E4DF3
851F2ECC6C44410F70047F9DE3239472DB1BB989FFAA68A5B9D05CD80076B0DC
AC90C95010AF632DD1CACF7DBED5B660209366199D3975C03C9BA9BEC93D9F92
541683274416E11AF10EA6C31A11ADF496683FB8781149E2E2F8FA0C443C674C
E17C2201F9A109C3FFDC30D809F15A4B7A5ED4CA50DE6CBA945B7C311DA2C99F
92941A44F13D8A3C25C85290C7C4BC225FF3FE6A6E46098437821BE2E2397517
C741366B4BAC12F3999A43D6FAEAC4EE68BB1E17F01961BDED6CF1F9B7409796
642D30C445C7BD89606998907BD5F83D91B0C8F888D6562847CBB601BE924382
BD60041B294ECA6A77B9085B3F73E992CC5C63AD8494C63061BC8A9750645152
2DDFBD045E83276CB429931FEF95AE2A9BA4C3E5DC7410F0943784F41C86CDF0
128A9FF5B0A4403D3F80F0D92CC37DEE5020275FFDDCE8AB6FD223F81302766A
BF1379BF7FEFF5C6D397B701B880224DA5968376D09BC68430FD295B9BEAA42F
25663CB22009AEEF52E7963E92F7C83F05BB25B28068DD3C3AC853622E92472E
DD2E232E0C39CDAF3164C5F78D5F6B5B2A8036C41D925C4E3BE007CC045E27BA
4488FB2A6D08C1206AD045E97332C9106D1D395C6730D4A3AF605645E3CFF5D5
B72DD13C1ADF71E2A0223BE286049E5F441287566CF64B77D398D38BC512D424
24935783103059E87879EEF9E9150CBF839328BD30B6EF188AD42067B8714191
2598FA4DEBD84BF83384BEEDB6DCB1D7547301A20B3E7087F9013F1A6463D1BB
EA752BCC8CB6AF84B015CE30D5B4420E8FC1A960121DEBB95ACE8373FCCF886E
80EFBE065B5A9F1B52D7D61A0F6734C5AD535826F1D813A47E8B1BB3FA6E38FF
19BA17BF085BE2A2EF58E09664C2994EDBAE9C6E326C4A5BA2BD1664E3462154
0F2E32641EAA35C5FABBA0B383535CC82E2ED1A42FC707F9646205B6EC1BDD68
95C5AAEFA8509E33F4D31D30CAB6F74F91EC0F7F6BDF6E37C2AB624F26469688
58C1B6C884869FC89D3B99F98F68363B1EE9670DE87778E2DA15AEB2210AC400
8A9CEC3A689D82B1D091907E79BF3D6A6ADACF4EEF21B0C1683D5DE9F1935701
AF74B4BD43056C737CE565E85037EF6DB0765FA2592A2A89121C5211CCF65579
84CFC845E225B9DE5115202701B8622B4647A82E1BFE99621274FA6A1C7997C9
FC89AF8FFD906B3BD8DF677E37BA04B7AD87A5B26393C81C13C6300D60C6B0CE
C9B04F6FC173A0035A71920F892C542CD6DD88B4CD689C1AF1D6B6D7F360A22D
41325A4AA61E1DEA7EB2448B539002EAA8E7CBBF3F56657C447BC39C8C3EE6FC
C90A4B95B8A0D743BF36A489909E71FDCF4B7D3C84E48225AC81E6808E98948A
6101CB9EBE71A695262CABE2BF33B635070BF8015C7D7F35DD89FD9FC31475BF
8B0667F6768F2ACF1951BB1F084CF67AA5B6219F41B80EB169426A4CD8C7DDA2
095A511941FFD13E93C332B707F5548D1EF2B389D94F642D0A8B583BC6668E05
EF5BED6C3E69741EE27A81B21FA8B8CFDABC8D7B2F0E51EB76CB7BAC4A0845A5
5C925F677872308DCF934FF65279272D5F744A255495CD0269D90D0A7FFBA860
0A72F31F8B9830726074784ABCC95DE6E8EA8CBC77ABC363635138F5FC7E4F0D
88B11A1D187FEEFAC528082592ECEC3AA26E7BD6FDC5CA73360C24D250FA4237
99FFE323DD3B4A8B01B21FC3981DFE24A4880C63FB6EAB1DA1E4A82918A0493C
CA74FC03A9DF04053DF84690FDE0571E81F5A279024A3BE2811C13A30E74EFEB
3F9F87C7DCCEEC317EA1B6A93C7F9038F35B4B61855C6A31EFBEB6D56EB4E5E5
E0E965986B0879E74EA20240E85C8A38C0B7F7188F922C492D36A99479EEA23A
6A13264C64252875D1DEB3AA0CBA7AE680195FD7734D753822F9E638BF5793EE
9E40B46596D3BACD1BAFE380D1FEAEA450679238D71482763CE834813D594686
142DAEFF0E7597621EFB2C8A76D5927828CED3178A5930D9BD5C9E080DEC76ED
26F125F3561454D2BD7B325168618973036ECEF5E875A86CCB555CBF729E3D88
B479F0E5C6CD80DE29093C85D1804321F967BDA652F67510AF20A0D36C410F4E
CECAC025FDBB8FD1C4274C20C1FC7251C3E28AA95033E24ABDD6B93AA89441ED
6AAF771A4C7D6178F7AC5BF372AB4DFD58F280A8C2EA382599BA0E5CA557639F
55C91DECCCA48FB009AA34C3302830B147C980666CC500AF150412E37AB7AB57
B698E5FD4BBBFA7ACF20A7B46C0D1086EA7DE36212DCBC10445AEB8C94E1802F
FDB2C5B4D33BF83EDC93121A0048A48607839A7914E7061F5B02247D2668001F
00DE9CBBA47AD2B3A13B4C734B37ABBF826649B6D464AEB9BD3DD01BCE0946BE
051E7D110EE2FE5C566735D9FC3EB950798B094FCC9D31BDFDF6A56CB281EF1F
11C4253505F12024B188FD59BD428BEF21557304E736C5CF6AD65CC96D18721C
DD71EE39B9996729C607E70E74307BC960112B9CCB2C8DE854DED4BCA8FA8EFD
5B1BEBD4ACE32BF5F70DCB5E1F59A9C019B0DC77323A2D463710DB5F4CB1B798
689384
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/CMLAHA+Futura-Book findfont /Encoding get
dup 104 /h put
dup 108 /l put
dup 105 /i put
dup 116 /t put
dup 83 /S put
dup 117 /u put
dup 65 /A put
dup 44 /comma put
dup 86 /V put
dup 74 /J put
dup 109 /m put
dup 55 /seven put
dup 110 /n put
dup 77 /M put
dup 121 /y put
dup 46 /period put
dup 66 /B put
dup 111 /o put
dup 78 /N put
dup 56 /eight put
dup 99 /c put
dup 103 /g put
dup 57 /nine put
dup 101 /e put
dup 97 /a put
dup 49 /one put
dup 32 /space put
dup 102 /f put
dup 114 /r put
dup 33 /.notdef put
pop
end
%%EndResource
[ 0 /grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek
/caron/dotlessi 32 /space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/bullet/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/bullet/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N17/CMLAHA+Futura-Book -1 TZ
%%BeginResource: font UAAAAA+Futura-Bold
ct_CffDict begin
%!FontType1
14 dict begin
/FontInfo 16 dict dup begin
/Notice (Copyright (c) 1987, 1991, 1993 Adobe Systems Incorporated.  All Rights Reserved.Futura is a registered trademark of Fundicion Tipografica Neufville S. A.) def
/version (001.003) def
/FullName (Futura Bold) def
/FamilyName (Futura) def
/BaseFontName (Futura-Bold) def
/Weight (Bold) def
/ItalicAngle 0 def
/isFixedPitch false  def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end def
/FontName /UAAAAA+Futura-Bold def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox { -171 -264 1441 1040 } def
/StrokeWidth 0 def
currentdict end
currentfile eexec A0B00ED5187D9C0F1ECDF51878C3AA5CAA3EC70E14AF46
F38884AB0522111E1FD6B5E52246D33165D7360B47FEE2078BDAF9F5724920E2
B8C7C8DEF08111E9655FEB2D7D43B90DD0271717BD08D48D1209FEBFE7B9C4C9
04828D33C143D5CDA944594BA8901247766DFFF8952C9A24AE1BD58BEDD61A48
002D4E12E59AAE2CE61CDCD892A0D488E46BB11D275934A058DC403F9249464C
F61C23C6C10E0372E1E90644C00B454A41D294BB4E920630366D498CD05D9450
4B46B783C3641C32C5BB896CEA2D21318E52FF8EC69773683BDA9785CD96603F
82FF0E6BD19C2C49D86E0C8178560881ECA4BA055ED326E00F02C8A8D0AB86F6
8B613F185CDA97BD6A40C8AD2188ABCDFE5F463D1E3D4A8D33D1D680C94F1FD6
86F56DB72B63028B040B5E272C9809B3929E48DFEBF04097D9AF48551A439B3A
8618E44BE37671DFA2A1C4B4B0775DBF089D501A6DC4DF6C5EEB90F85FA2D58F
2CDE8C55DEC7D614510F070534461510398D5480C4EBC38902DA241B3BAC22CE
F035DB951EBE63609D8CE749E11C828D79498B031214F576066F4882476202A9
4C9695E1B1F859E9F3C60B48541B2873F1E2B929A4F67F838DA489A49825AA99
2B95D0BC323E4B456D77B7668BEF5A8ECF084D8B7056A67B7E9BC27A9BE9B758
002FBDFC0E5AAB1304731A76AC6727E86C8E645AE3E3F0C0FC56C9FBCC5522EA
16473FCA51BEFAEA1AF6C9844EE4B5934DDC832E81CA578426517FEDF9D73852
827E62B24A9CECEC55E88F9D8D051411DD275AC341D259BE0141D33D17460DA9
FFB6C77B627161DC2AD0B105B51206764E36151B06FC7B96B1F0E552326088B5
533D2EB0DBC6E5E20076CEC79FAA60F8AE235332D2D8BEA1DCB89A0D3EAFDD8D
03586E3259B67C10CCD2A9A4A981EA3274474DC879EB2A7820C26EE72A97B04A
971CACCF7E0BCF222AE69A87E3E45C058C8BE96E4D118AEB226EF43DB2512BDA
164CD273A27A1B0B0763A10DE220D41ED268C1017604326121ED295E18ABA86F
90D29780F04FE092510AA1CE3CCEEE5368D303DE3FE1812EA0E620026195BB13
FBAFC6ABB315E7734AA2EE009848A4DF623D3B3C83C1646DB6F0C7EE65547276
F66A117A8D3E8D9FA806095EED342EC511AF942711FE964ADB9000989DD10277
F5EB74DB9E550CFA7041FED12CB52BE75F67C460C8042AC83B3BD54C1A0D2CB1
D429B71D7DDFCE5C80577300C6E80BB120C0B0DC748D27C62B7A55850AD270D4
1933BE693D0228DD52FB3312E5955F0484AD7C487CA413C23285270B742C7F64
2F9BEC4FBDC6472F0BE0917D1720CF938537B1FF0871058ADBDA45B0FB248842
4DEEB6B130221D646E9DD5B4A0206C3FB33C31FECD93D42E654CB5B0103A7FF6
BC0872E4EAE9451BF5D9F8C4831A04F9A0FEAB0C8E4A09C4E219C0D049A5E4A6
3FCA0423E5B040DC9B637369C7016D151958FE398E52CFD5193AB86B8D5508B9
A869DAF9A45847615E9C3CA42C43322C5B68A0635F431712EBF7788284396C82
EC3294FEE071F44A2A99BE7219C43217EC8C201FCEB336244BC8352DA37F6529
11009E95F43D80B3E3EFDC5F1EC1A17D4EA8235F8EA9FF31E2B5F49063707C0A
12AD4CDB1FB8B9FCB66070DBCEBD516CABD9F0080DE574664504C5BE13BF3ED7
1B5ED904930E9480BD0176C5BA94E6C68DA9E07172827BFA033B227AB8CA7CD0
22CC23AB273676C4704413785E4DEDE5E284D17D7991BF9F454CCD329519FF29
F0A95769DC2E3B12F649F7CAFD66FE48308325305E9174D70841D91022F7677E
52624F1EAAC0DDB0BEBDF47EC550CAB4A81D586FFFB3CD911217E584452D1B9D
C69EA1E5CEAC16F8A88CA90F0ADAE54EDB995B6500F8E1079ACCAD1C27AB5349
1F51E8A8F03FFFB7FBBBD970E61A71270B3091670E7548C33182184692562EF1
CD674F61D0AF9DB1CFFE52D3123D4FDF5926CCADDAFB6F46D7B92EFF9B829774
DEDE61BD0AACF6D64F305EE65EBBE481122721317177789E0B3042F9BF96822E
4CFBAC520C1C8BB5561AF8530A3EDADA5B7F466A6628533AE5BA616120E4AF7C
AF91D7DD6B2D03BAA3465AA3308DDE88CCCFFE08E3DE5E49304C21FA284057B3
8A54756CB81EE311761EB60655D4182A5756748414AF2DBA2216D7E857615355
243EA5F93553A62946A604180471D863887FC267F4196E680DB6D8E0CF4CA18E
6EEFF5D7D6391FF0368BA312D121A31FD82DEB2C459396A920664AEAED986621
02D64A8616CC59303DD293A46BEA225DD354DA8AC12127AC53DC94E1B2060C42
858A75192746A919AD3C3D76AE9F65F15E37049FFD7F1E53B24D2A18BB1A1DF2
969EB6FAEAF0EAC5AFEE570F6B57D93ECCDE1BD1DA606C3557C246AF75112A06
E3AED1D8997CFC18A71012C5C4439B827AF1EBA7A0BB825254D5B3AB65B38052
35D9014E236E76705998454EE462295F66FC19F1C3927814FEE310467DC53BAE
7241BB9B3C42FF5EE30FE84F3931F9E65AB11B729BBB9C8919E8B1C7AF1C9ABE
824E6F819A8445AED1B6F6B424BECF25DEB5889D7891DBC4725DFA73E442637C
4354ACE71E03E8EB7726693BE352379208BD870357EA3FD3E5634AFCB9EF7743
6F68143AADFAF971DE00511B6A4590484371787F3DC95B4487053A84ED7E74FC
BD511C20FAE1D3B071AFC070F5B80DE909FD7145B6780FAFAA0D8A6286564563
86D46584C765484A8B86033F75D110106A8996BF9A40BE72348C632BB0F6C3A4
D66F65AD8C3C7A95A6BB4DCCF788A5F0B5ECB66160C345059C8A6B1D7BD9D501
5EC60A7F3DAB768003220AD452843833A30AE781A7A4A631B15ACFC2297F96A2
01DE39ED65498F2A7DF2AE96A4384A706289F5AC29F1EBF7DAB34D7A0CD8ECFC
835EF0458C9798817776257EE00A6DB27712682A82BBD720DABD8DE329C51812
0D7D6AB68F50A7A3BFFC5612F189CE8134B892330110CC8BE2486E7259C20A8D
5AF911A4D12F6410DFE69A27F1F3F0448D429CE614C33C41095BD81A0A8D92D4
529F031AD2740163E41D57BF87B00A6CBAC140A4803D70BF2F4C65118B9EDF3C
44B2CB82CA58E1F84E95F5E26E37DB9AB2EB026D0E0E0C190A01190336275680
D5F2BBC7B112B34E77A8CB4DD45E4F03E29424CF542F5AB2555D0CE7D34156B8
8B765E44A9F9EC8B378F4BE55D7FB0D6C8737F1FF87037E0CBEA2C9C8BD57315
A221610C981545F29DE2CAE78EDD1C3C97603BF9819BB54F793C5F3726FC93DF
FA52F5A64BDBB8ABA2C41D3869EFF42F3B7508B9FDB2878784A88F0859C5012A
3ED06C499D90471C3709537FAB48BFF299F3DD66704851F77F84FCF66596632E
EFF6DE8D6CCF8BECF3EDD7AA8184B7AA0C1DDF38068299528081EC74C86EEA79
ACC68944499695C82338CFA05712D72357D0FFAA1030504411ABA58ACA903DCE
EB9DE48B82494ECA8A51B3794D9E1BB7CED793384AFF77D886F0C73752C1B723
51B91A95405802D6D9884CEB8A2C7AB926258136A635D84470247E3AC95F1B5B
0170161DE0D0E466D51E293C060B9C0333A599F68860DA3800A213827F089147
11BDB37FD740F875DD2E6C87EDF1DEDA03BC854CDFAE37D6E7889CAC8053BF22
1AD370E41C0897E2AEDB13CA158622A6273112940FB68F518CC6818D3420D033
D95587F26CDAABC44000AB57CEFC5D9AAA58C9AF069AAD1E9048DDAF681163A2
E25739247932235BF45ED4C5DCDA127151C8DC1B26BA86E85E19FD78A5C1C87C
0F89668795B1B3B8CA946B208A4EB70C18DE73CC573B02BBD245A5CBEF9F28CC
0F2F5F67B54664FE1927CD4D50828D86E4996AA3653E8405BEBC76E32FE1E683
67914698A5B28188F2721020E2189D05DB34F68E7259643DB7549304FBC971D3
7CA8FA61052E5D08BB382C653FEBC4989809976F1812FB2C11E553D3D0DC2B7A
8BC9E15A2DB78F0ABADE7E39CDD3A2D7A1A008B6BB2AED2002F6013CA7A8FA66
83F742A2F788A65D53F0B4A077F6A5F8AE87C04E655E29E0F1CC2A2D069F6DAF
96448B95511208B46C143458CEC2E2172A1BB3BDDFDB6CCABE6DDAA0E86542C2
3B1767974BA6391D8149A8727C9145E9590F9AA471E640BE43560EAAAB05B528
5102F8EF157F075FE344E1D2E4F89B9B232DB2EDA5865F84F7A0C08344F507E9
DCC714FA18F257264CD2E77F18D51CC98C7F1810321772D68C283AF05D26301E
9AA27D2A76D1E8A351D174B332B153A7AF2F3FE7EE2D254DB82B4E0F0936DB04
48A4D7A27CCDDE69EFF2EA3D175963CD2190A6E9EB54E830606420A2046EA549
D1D3AD1ECF18219120D190CD9E52D61A8065300389967BFA558DD1F8BA94D3CB
2688D4276623B20B2F6BF50A26DE45F817072E01D2F0BA3B525634D53DEDF486
A1B82E39951E0F9529A9BEFF63E50527E0699F86F4459226738261FFE1C4B4DF
798F4E650E62762FCEE67EEECC004E8117DE99DE99FD1AC911BABC13B48A9EAB
8D1065C9F1EEF8CF294D7FEBE470541C7F8C58B259D1001D049A53F16C0C8721
70F9ED116D702A9D029D9A0538F62F4088EFDE3E8386C60EDCCF351C66FEEA2D
287EEA2ABA5A70ACD5176F32C60AB5BA770C2E9ED218ADF051283BE69846CB6B
035764511DACE1D8FF448930FC7D4F1D1731C0F303DBDF2FBE36452DBD1BFD26
E7C2A12A54E1A34AFC68BBE4EF6B2887DEC895907B45F1B80B67486A397E8C21
EC7B3EA1852E8A7FB282AD3FC4A6150A1D095988C22A1EB8E130FDA080E4F48D
C4B00379524E0D9986C223BC6CF981BF150A6E7EFAF3CE0AC8E99A684BF39405
45162844C81A23ACE64B5DFFDC2B1CC8AB94A78084FF9FE7527B263867A8F02A
3458C1C15674B93EA173F1EAB45D0C148C7C65BA1931CEA6DB0891379B9AE8C4
8F2551ADC4895F3A4985274AA801DD341B724598C7B1668336A3B65B8ED806A3
FE99BC1F3B77265E5E05D5AB05C4E11FC9AE21D20F0857FD1D7EA9C0A507FBCF
EB769BC15D89C7939898F58A704961B3B8901C5B1E08306031E0D44B13E38833
01AE778B58E6F3D6F19A2017BA3E9F94552A5B004790F855AD5AF0AD775DC862
A5DC8AE4D07CE0881D20083B57E3C6B5AE8E1DACC4B29F4EFBA1144A0E3932EA
8EDAC460CE10CA3DD3DC7BA89AF11EC0D13394E2C1ACD5D57474B678F87A7160
E9093FE8373C1F1FF96D9854CD588DBF7F0B4943C252C9C0E6ECFA83A5211C19
C73F515AC45062E7F5F4B8F15A7C729E491BC054A477A894C0FDB538CD86ACFE
74294B7C93411F19BDA11CFEAD055E16A1AB6971EF8FA3AB124F0992248B0BEE
16267D3FFB563B4753D32EDCB85559431DCA27DEA2FD2E81F88C7F5244BA3741
2558EA216D33BB320B6047179A6FEB86A17192D425126B62F67566CAE62E115F
D594370422067DE3D1C4EF631F053C15461000FA92421D93B642F4718FBB2734
2AC902BC6FD8FB36DEEB7CACF2018A0C64B51F303E4E78D9814A527D31E9488F
BAE68BB94ECAEE54715731C2D2F2176D6AB69D204D12CD48777480CDF23049D7
9DDDF5B727C4292470CA7C47450884FA17D5D774332A6B05B9265AC8BA4EB7D9
000EB1B86DE16DDD229D110FA571B58E2113DE2DCA853451CB36FC8C1A5B28A3
61AE01FF4B76D43F30E36B3ED216C4AD3E86DF52A57777A4FFB920CB6609F7F9
21C9F492FA1497F52668E0710C8FDA1747B71975E33FAA0D0E24F7D104CFEF8B
49B45C3DC3F458966707E166BE4A358E86441B2F0532229D13A556BF65040527
FA5EFE048AEB729C52FCFFDFD7895D845731981135654E509B642B6853A550E9
1A17C4E82D309FE00A7A4C25A195586AA1687D0115E3944A78D6806869B1D1BD
EB26F5D9A8C4AEEB2ED09340574A7E548217D3AA075EB67631660E9511D00AF7
C5AFDAAC1F390A2968C76C91EB3F8C878A3DE773ADAB5B3DA22C1A6572A92F6C
DB97B5D60CA740AF5A9D3DDC3018BDB8210BD8090C29354CFBA9FC760C13353C
1ED2F1EC9122D130758960582CF1E82A6D7206BDC5BDC5C6A1C0810ED0B965FF
22B413129E363DD1E9CF32DDA01C4F038D395D37D1255AD63D5B17116A9A9E1F
57CDF0739D7E41E16AADD8793F67B3E53245553FD8F1ED0478755858DF10EC36
70EEDD9580F15F979EBA4F7B5017A2A47DFFE9DE0733A72D687BCF1D82F58981
27845F5CEC5F16C7C2EEF56463B49FB26C6A78BE85DE6745FE10FDC555FC4AE0
83BB38264B4F2D6B889024815238C19AA9B6AFD7489891824EC13100080A52D0
12E63267EABC9396073CE8DBC1EA00605ED37293CAB97DE3A13F8CF4D3C07B20
5CB87E4A147C8F0F5E63ABC4C9D22BD24DEB66ABF56FE9D119F6BBA1C58C9835
EF4F972119726A5E4F0C633042619E92022C205DAA667529802D5C5AD5EC8FE4
C74B43B898850C341B478F73F49A346BE2FA54987CAB5ADA8DD77505726142EE
818B1553D571A901836F80B95194F045B00BEA06CE2C4B030C90850012CCE904
B9A7AA5E0D9F0A26DAEA714C567ACF92115381E93BE4629F37E729744923AC2C
AD8B1C89FFF8D3ECA0D1F09EBD6B7679B909B0D8CEF6DD96CE19DB8BF762862A
2067B0A8D36EFC4D7817C81F68174C1E813D323C96F5F1FF161B2C7C8E5BA858
50AAA556B351EA5DA3BF71FC686C59766958C5CE2D9CEBFDBA9FC3BCF8F40021
5AB4D72F417C692D850D06BE9CFC788552C115AE6BC03B3F89B108FFAEC2314C
D1EF94FB52412251F88AFB85E8DA6819824AF5F5E74928C3D1C1A13C36C0EE33
F32540944C7D809DBDD57D1F098D28FEFFDB5D7286551015A3E21FED0DE1D882
7B5380E75755D829FACB36D222B2CB670E21EEAB07C79F9B801195EA70AE93D8
1B9BB37C9B1FEBC65150613687FD7D447C089CA5F0733BE719FC1BD416DE783D
8D71203198A07009E96484F9825711497681C6AD07EEAC2EF41A636F055F3DB6
B90148FE850A82AB94CE5F7784D12F54541B7B52E50031C596951CF9D2474651
F67FC6139C284077B7FFB90FE33E3A6657BA451CCE548DA35241EAAE25AD2A03
D338B510D591815AF130F4650A61857CBCF4869BB0584AAEBA8338BCF6D26EBD
C46C5F1F4524F661E70905519166870607327BCD772BB535C373220A061B8C03
9C7371310C9D7EF73AEAA69EB687AA8DA45C2CA12063569C133CA5F22DDA6740
6DD3ADFA836797DCDC6986D1461CC0627111EE5CAB74F862DC45091530961C2B
B5F9BEF5F26F071A8803AD5CF1CB97F7DB4D5E3BDD9789F3170628E06BA21BBA
8AFE7597BD69DE8D18CE5265759100FBF1C4C34687568EFB8B93E70CABF19A99
BE929A3DC56CB2E6EBF1AB53C8F568C501164AB34A12EFBAE82749FFE61E4440
2CBD35D49F6F4AB4E77CF2F89FFE5EDEFDC75913762A84A7C191748228D12191
407EC5E2E44D731AC5011480B6F3FC4685C3BAB8ABAB20451F1DE633C349A852
808043270B37F1280BEC6BEBDEA162E972794C1B019C4F91C3F0DBAF8FF68DB8
3450B453128F6FEB1D15D02AC6AEA54139C72EB269B87D39C7088D5F38F04426
488296B24DB1EB650A52771917498A9C6193CBF95A3DD0B334B2454B4F596216
4368A7CA9C3A0DD6252892F9100FA4191101367F896A43803F71B4F6DDE6AE42
D12DCF5AD3F225FB1B35F955BC967F8F6C9314787D304A848B44C95DFFA486CC
702F5180F9E1CF8E34E873435211339D36BF04B783E2B5B410574B6A412EC03B
59318371BF6442B2C9E2227C029B23C1ECEC4F295963F6AA6072B561D639020C
0B8CD9E4F701012004349671CA1B73B133857F2F9DED89D08B2E68C0DA18DBC0
D4B99BE7FCCDC5B95C07CE6002C63495D62F765C68F66FA38402E4E42F2B11CB
51C64933105A70CBB56370B8C188B30530F1C1663A87F917AA4B15DA2FB93B63
766F1D3FF79F65A8090A0F3C7A2C531D9D674600D5F050FFE8891D39E1C237A1
A088C8D0853852C1A5A03B819A02716088C91EB480DBAED1148666C84BEE3444
B44836457ED5EB2273A8C59E5C0B5E329D9083E178D527F5058F09EEC23FA9C4
63E8657C776F6D684D4E06FBDB875B77B7251B0397AF41C38F2F6E2AB641A91B
5A67B9B538E5AF72E44C11DB4A22A5492F9868253945D96700705AD041A0E8D7
ADE6483A585BBC321C630F22CBBA97E4D04D5311B1D1E3C7174C99FF6C0F9815
8C1D4B89AF606141981470AED19D2660B787FF030C071AD04754C23F70CAF179
4FD8DC222D05B1336DD36A1843A7C866A410287B56109DADE61528C2DF348612
C09E4471B7BD250F061CD1C001D23A06C9D7342823953FE1F2F68715A42078F2
7EDE2C158B0DC2EAC78E698D7AAFD0F88C92D4647FB5F5555E01D4735B4D5562
976286F29EF3F38699C21DCE965DB6410A0684F79AB74A25B2D911988E77DCA8
C49495322AA9E85ED171B59870B03B4DBE0AEDAF91416A32569A575F1D1B21CF
3A566E21EC3A16913638339B002B88820687174C2920D37B033355E784731B3E
F3D1EEBBDB84BE44DFF8C918E8B635A8AC6CC921BA7FE806E0CC2ACEE465FDCD
B276B40996FDEA806C700D68619B146CF644EA086ED124F24D7DB149B3BC0E92
3C4900578A82DD2408BD762063A39241
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
/UAAAAA+Futura-Bold findfont /Encoding get
dup 104 /h put
dup 115 /s put
dup 82 /R put
dup 100 /d put
dup 51 /three put
dup 108 /l put
dup 105 /i put
dup 116 /t put
dup 83 /S put
dup 52 /four put
dup 73 /I put
dup 117 /u put
dup 84 /T put
dup 65 /A put
dup 53 /five put
dup 118 /v put
dup 54 /six put
dup 109 /m put
dup 120 /x put
dup 87 /W put
dup 119 /w put
dup 55 /seven put
dup 110 /n put
dup 121 /y put
dup 46 /period put
dup 111 /o put
dup 66 /B put
dup 56 /eight put
dup 99 /c put
dup 67 /C put
dup 112 /p put
dup 103 /g put
dup 57 /nine put
dup 48 /zero put
dup 101 /e put
dup 68 /D put
dup 97 /a put
dup 49 /one put
dup 32 /space put
dup 114 /r put
dup 102 /f put
dup 69 /E put
dup 33 /.notdef put
dup 50 /two put
pop
end
%%EndResource
[ 0 /grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek
/caron/dotlessi 32 /space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright
/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five
/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A
/B/C/D/E/F/G
/H/I/J/K/L/M
/N/O/P/Q/R/S
/T/U/V/W/X/Y
/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e
/f/g/h/i/j/k
/l/m/n/o/p/q
/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright
/asciitilde/bullet/bullet/bullet/quotesinglbase/florin
/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand
/Scaron/guilsinglleft/OE/bullet/bullet/bullet
/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright
/oe/bullet/bullet/Ydieresis/space/exclamdown
/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen
/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring
/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis
/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde
/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde
/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
/N20/UAAAAA+Futura-Bold -1 TZ
24.0002 126.329 262.002 428.192 re
W
n
q
n
350.64 208.26 105.96 -18 re
W
n
Q
0.292999 w
2.5 M
n
69.688 443.971 m
158.873 443.971 l
69.688 443.971 m
69.688 446.316 l
0 setgray
S
65.092 431.077 m
/N24 [10.339 0 0 10.338 0 0] Tf
(-4)
[3.44281 5.74848 ] pdfxs
n
91.962 443.971 m
91.962 446.316 l
S
87.367 431.077 m
(-2)
[3.44281 5.74848 ] pdfxs
n
114.266 443.971 m
114.266 446.316 l
S
111.392 431.077 m
(0) show
n
136.57 443.971 m
136.57 446.316 l
S
133.695 431.077 m
(2) show
n
158.873 443.971 m
158.873 446.316 l
S
155.999 431.077 m
(4) show
n
80.825 443.971 m
80.825 445.144 l
103.129 443.971 m
103.129 445.144 l
125.432 443.971 m
125.432 445.144 l
147.736 443.971 m
147.736 445.144 l
69.688 443.971 m
69.688 502.669 l
69.688 443.971 m
73.234 443.971 l
S
49.148 443.971 m
(-0.3)
[3.44281 5.74848 2.87424 5.74848 ] pdfxs
n
69.688 471.049 m
73.234 471.049 l
S
52.591 467.62 m
(0.0)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 498.126 m
73.234 498.126 l
S
52.591 494.698 m
(0.3)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 457.51 m
71.447 457.51 l
69.688 484.588 m
71.447 484.588 l
69.688 471.049 m
158.873 471.049 l
S
0.585999 w
n
69.688 471.049 m
74.143 471.049 l
75.257 471.02 l
76.37 470.99 l
77.484 470.961 l
78.598 471.02 l
79.712 471.107 l
80.825 471.225 l
81.939 471.371 l
83.053 471.43 l
84.166 471.313 l
85.28 470.961 l
86.394 470.433 l
87.508 469.877 l
88.621 469.613 l
89.735 469.906 l
90.849 470.961 l
91.963 472.602 l
93.076 474.302 l
94.219 475.21 l
95.333 474.595 l
96.447 472.104 l
97.56 468.177 l
98.674 464.162 l
99.788 461.847 l
100.902 462.756 l
102.015 467.415 l
103.129 474.683 l
104.243 482.097 l
105.356 486.551 l
106.47 485.672 l
107.584 478.99 l
108.698 468.382 l
109.811 457.686 l
110.925 451.092 l
112.039 451.444 l
113.153 459.005 l
115.38 483.093 l
116.494 490.654 l
117.607 491.005 l
118.721 484.412 l
119.864 473.716 l
120.978 463.107 l
122.092 456.426 l
123.205 455.547 l
124.319 460.001 l
125.433 467.415 l
126.546 474.712 l
127.66 479.342 l
128.774 480.251 l
129.888 477.935 l
131.001 473.921 l
132.115 470.023 l
133.229 467.503 l
134.343 466.888 l
135.456 467.796 l
136.57 469.496 l
137.684 471.137 l
138.797 472.192 l
139.911 472.485 l
141.025 472.221 l
142.139 471.664 l
143.252 471.137 l
144.366 470.785 l
145.509 470.668 l
146.623 470.727 l
147.736 470.873 l
148.85 471.02 l
149.964 471.107 l
151.078 471.137 l
152.191 471.107 l
153.305 471.078 l
154.419 471.049 l
158.874 471.049 l
S
[1.172 2.931 ] 0 d
n
69.688 471.049 m
74.143 471.049 l
75.257 471.02 l
76.37 470.99 l
77.484 470.961 l
78.598 471.02 l
79.712 471.107 l
80.825 471.225 l
81.939 471.371 l
83.053 471.43 l
84.166 471.313 l
85.28 470.961 l
86.394 470.433 l
87.508 469.877 l
88.621 469.613 l
89.735 469.906 l
90.849 470.961 l
91.963 472.602 l
93.076 474.302 l
94.219 475.21 l
95.333 474.595 l
96.447 472.104 l
97.56 468.177 l
98.674 464.162 l
99.788 461.847 l
100.902 462.756 l
102.015 467.415 l
103.129 474.683 l
104.243 482.097 l
105.356 486.551 l
106.47 485.672 l
107.584 478.99 l
108.698 468.382 l
109.811 457.686 l
110.925 451.092 l
112.039 451.444 l
113.153 459.005 l
115.38 483.093 l
116.494 490.654 l
117.607 491.005 l
118.721 484.412 l
119.864 473.716 l
120.978 463.107 l
122.092 456.426 l
123.205 455.547 l
124.319 460.001 l
125.433 467.415 l
126.546 474.712 l
127.66 479.342 l
128.774 480.251 l
129.888 477.935 l
131.001 473.921 l
132.115 470.023 l
133.229 467.503 l
134.343 466.888 l
135.456 467.796 l
136.57 469.496 l
137.684 471.137 l
138.797 472.192 l
139.911 472.485 l
141.025 472.221 l
142.139 471.664 l
143.252 471.137 l
144.366 470.785 l
145.509 470.668 l
146.623 470.727 l
147.736 470.873 l
148.85 471.02 l
149.964 471.107 l
151.078 471.137 l
152.191 471.107 l
153.305 471.078 l
154.419 471.049 l
158.874 471.049 l
1  setgray
S
[] 0 d
n
69.688 471.049 m
71.916 471.049 l
73.029 471.02 l
75.257 471.02 l
76.37 471.049 l
77.484 471.107 l
79.712 471.225 l
80.825 471.195 l
81.939 471.078 l
83.053 470.844 l
84.166 470.551 l
85.28 470.316 l
86.394 470.346 l
87.508 470.727 l
88.621 471.547 l
89.735 472.573 l
90.849 473.423 l
91.963 473.51 l
93.076 472.426 l
94.219 470.228 l
95.333 467.444 l
96.447 465.188 l
97.56 464.719 l
98.674 466.858 l
99.788 471.547 l
100.902 477.408 l
102.015 482.185 l
103.129 483.533 l
104.243 480.133 l
105.356 472.426 l
106.47 462.814 l
107.584 454.99 l
108.698 452.323 l
109.811 456.455 l
110.925 466.389 l
112.039 478.668 l
113.153 488.661 l
114.266 492.5 l
115.38 488.661 l
116.494 478.668 l
117.607 466.389 l
118.721 456.455 l
119.864 452.323 l
120.978 454.99 l
122.092 462.814 l
123.205 472.426 l
124.319 480.133 l
125.433 483.533 l
126.546 482.185 l
127.66 477.408 l
128.774 471.547 l
129.888 466.858 l
131.001 464.719 l
132.115 465.188 l
133.229 467.444 l
134.343 470.228 l
135.456 472.426 l
136.57 473.51 l
137.684 473.423 l
138.797 472.573 l
139.911 471.547 l
141.025 470.727 l
142.139 470.346 l
143.252 470.316 l
144.366 470.551 l
145.509 470.844 l
146.623 471.078 l
147.736 471.195 l
148.85 471.225 l
149.964 471.166 l
152.191 471.049 l
153.305 471.02 l
155.533 471.02 l
156.646 471.049 l
158.874 471.049 l
0  setgray
S
92.153 532.002 m
/N16 [12.924 0 0 12.923 0 0] Tf
(y) show
101.019 532.002 m
/N24 [12.924 0 0 12.923 0 0] Tf
( \(t / s\))
[3.59287 4.30359 3.59287 3.59287 3.59287 3.59287 6.462 4.30359 ] pdfxs
58.844 506.947 m
/N11 [10.339 0 0 10.338 0 0] Tf
(a.)
[5.74848 2.87424 ] pdfxs
67.4667 506.947 m
/N24 [10.339 0 0 10.338 0 0] Tf
( Morlet)
[2.87424 8.61231 5.74848 3.44281 2.2951 5.74848 2.87424 ] pdfxs
0.292999 w
n
185.983 443.971 m
275.198 443.971 l
185.983 443.971 m
185.983 446.316 l
S
181.387 431.077 m
(-2)
[3.44281 5.74848 ] pdfxs
n
208.287 443.971 m
208.287 446.316 l
S
203.691 431.077 m
(-1)
[3.44281 5.74848 ] pdfxs
n
230.59 443.971 m
230.59 446.316 l
S
227.716 431.077 m
(0) show
n
252.894 443.971 m
252.894 446.316 l
S
250.02 431.077 m
(1) show
n
275.198 443.971 m
275.198 446.316 l
S
272.323 431.077 m
(2) show
n
197.12 443.971 m
197.12 445.144 l
219.424 443.971 m
219.424 445.144 l
241.728 443.971 m
241.728 445.144 l
264.031 443.971 m
264.031 445.144 l
185.983 443.971 m
185.983 502.669 l
185.983 443.971 m
189.559 443.971 l
S
177.538 443.971 m
(0) show
n
185.983 463.518 m
189.559 463.518 l
S
177.538 460.089 m
(2) show
n
185.983 483.093 m
189.559 483.093 l
S
177.538 479.664 m
(4) show
n
185.983 502.669 m
189.559 502.669 l
S
177.538 496.632 m
(6) show
n
185.983 453.73 m
187.771 453.73 l
185.983 473.305 m
187.771 473.305 l
185.983 492.881 m
187.771 492.881 l
S
0.585999 w
n
185.983 443.971 m
237.243 443.971 l
238.357 444.001 l
239.471 444.089 l
240.555 444.323 l
241.669 444.909 l
242.783 446.14 l
243.896 448.602 l
245.01 452.909 l
246.124 459.561 l
247.237 468.617 l
248.322 479.342 l
249.436 490.009 l
250.549 498.273 l
251.663 502.112 l
252.777 500.383 l
253.89 493.613 l
255.004 483.591 l
256.089 472.661 l
257.202 462.814 l
258.316 455.166 l
259.43 450.008 l
260.543 446.931 l
261.657 445.29 l
262.771 444.499 l
263.855 444.147 l
264.969 444.03 l
266.083 443.971 l
275.198 443.971 l
S
0.292999 w
[1.172 2.931 ] 0 d
n
230.59 443.971 m
230.59 502.669 l
S
210.087 532.002 m
/N16 [12.924 0 0 12.923 0 0] Tf
(y) show
210.087 537.593 m
/N24 [8.013 0 0 8.01199 0 0] Tf
( ^ )
[2.22761 3.75805 2.22761 ] pdfxs
218.3 532.002 m
/N24 [12.924 0 0 12.923 0 0] Tf
( \(s )
[3.59287 4.30359 6.462 3.59287 ] pdfxs
236.252 532.002 m
/N16 [12.924 0 0 12.923 0 0] Tf
(w) show
245.117 532.002 m
/N24 [12.924 0 0 12.923 0 0] Tf
(\)) show
[] 0 d
n
69.688 350.929 m
158.873 350.929 l
69.688 350.929 m
69.688 353.274 l
S
65.092 338.035 m
/N24 [10.339 0 0 10.338 0 0] Tf
(-4)
[3.44281 5.74848 ] pdfxs
n
91.962 350.929 m
91.962 353.274 l
S
87.367 338.035 m
(-2)
[3.44281 5.74848 ] pdfxs
n
114.266 350.929 m
114.266 353.274 l
S
111.392 338.035 m
(0) show
n
136.57 350.929 m
136.57 353.274 l
S
133.695 338.035 m
(2) show
n
158.873 350.929 m
158.873 353.274 l
S
155.999 338.035 m
(4) show
n
80.825 350.929 m
80.825 352.101 l
103.129 350.929 m
103.129 352.101 l
125.432 350.929 m
125.432 352.101 l
147.736 350.929 m
147.736 352.101 l
69.688 350.929 m
69.688 409.626 l
69.688 350.929 m
73.234 350.929 l
S
49.148 350.929 m
(-0.3)
[3.44281 5.74848 2.87424 5.74848 ] pdfxs
n
69.688 378.007 m
73.234 378.007 l
S
52.591 374.578 m
(0.0)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 405.084 m
73.234 405.084 l
S
52.591 401.656 m
(0.3)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 364.468 m
71.447 364.468 l
69.688 391.545 m
71.447 391.545 l
69.688 378.007 m
158.873 378.007 l
S
0.585999 w
n
69.688 378.007 m
81.939 378.007 l
83.053 378.036 l
84.166 378.036 l
85.28 378.065 l
86.394 378.065 l
87.508 378.095 l
88.621 378.153 l
89.735 378.212 l
90.849 378.27 l
93.076 378.505 l
94.219 378.681 l
95.333 378.915 l
96.447 379.208 l
97.56 379.589 l
98.674 380.058 l
99.788 380.586 l
100.902 381.142 l
102.015 381.641 l
103.129 381.846 l
104.243 381.494 l
105.356 380.058 l
106.47 377.01 l
107.584 371.941 l
108.698 365.083 l
109.811 357.904 l
110.925 353.332 l
112.039 354.71 l
113.153 363.647 l
115.38 392.366 l
116.494 401.304 l
117.607 402.681 l
118.721 398.11 l
119.864 390.93 l
120.978 384.073 l
122.092 379.003 l
123.205 375.955 l
124.319 374.52 l
125.433 374.168 l
126.546 374.373 l
127.66 374.871 l
128.774 375.428 l
129.888 375.955 l
131.001 376.424 l
132.115 376.805 l
133.229 377.098 l
134.343 377.333 l
135.456 377.509 l
137.684 377.743 l
138.797 377.802 l
139.911 377.86 l
141.025 377.919 l
142.139 377.948 l
143.252 377.948 l
144.366 377.977 l
145.509 377.977 l
146.623 378.007 l
158.874 378.007 l
S
[1.172 2.931 ] 0 d
n
69.688 378.007 m
81.939 378.007 l
83.053 378.036 l
84.166 378.036 l
85.28 378.065 l
86.394 378.065 l
87.508 378.095 l
88.621 378.153 l
89.735 378.212 l
90.849 378.27 l
93.076 378.505 l
94.219 378.681 l
95.333 378.915 l
96.447 379.208 l
97.56 379.589 l
98.674 380.058 l
99.788 380.586 l
100.902 381.142 l
102.015 381.641 l
103.129 381.846 l
104.243 381.494 l
105.356 380.058 l
106.47 377.01 l
107.584 371.941 l
108.698 365.083 l
109.811 357.904 l
110.925 353.332 l
112.039 354.71 l
113.153 363.647 l
115.38 392.366 l
116.494 401.304 l
117.607 402.681 l
118.721 398.11 l
119.864 390.93 l
120.978 384.073 l
122.092 379.003 l
123.205 375.955 l
124.319 374.52 l
125.433 374.168 l
126.546 374.373 l
127.66 374.871 l
128.774 375.428 l
129.888 375.955 l
131.001 376.424 l
132.115 376.805 l
133.229 377.098 l
134.343 377.333 l
135.456 377.509 l
137.684 377.743 l
138.797 377.802 l
139.911 377.86 l
141.025 377.919 l
142.139 377.948 l
143.252 377.948 l
144.366 377.977 l
145.509 377.977 l
146.623 378.007 l
158.874 378.007 l
1  setgray
S
[] 0 d
n
69.688 378.036 m
74.143 378.036 l
75.257 378.065 l
77.484 378.065 l
78.598 378.095 l
80.825 378.095 l
81.939 378.124 l
83.053 378.153 l
84.166 378.153 l
85.28 378.183 l
86.394 378.212 l
87.508 378.241 l
88.621 378.27 l
89.735 378.329 l
90.849 378.358 l
91.963 378.417 l
93.076 378.446 l
94.219 378.476 l
95.333 378.476 l
96.447 378.446 l
97.56 378.329 l
98.674 378.095 l
99.788 377.655 l
100.902 376.922 l
102.015 375.809 l
103.129 374.168 l
104.243 371.941 l
105.356 369.303 l
106.47 366.695 l
107.584 365.083 l
108.698 366.021 l
109.811 371.091 l
110.925 380.82 l
112.039 393.392 l
113.153 404.41 l
114.266 408.806 l
115.38 404.41 l
116.494 393.392 l
117.607 380.82 l
118.721 371.091 l
119.864 366.021 l
120.978 365.083 l
122.092 366.695 l
123.205 369.303 l
124.319 371.941 l
125.433 374.168 l
126.546 375.809 l
127.66 376.922 l
128.774 377.655 l
129.888 378.095 l
131.001 378.329 l
132.115 378.446 l
133.229 378.476 l
134.343 378.476 l
135.456 378.446 l
136.57 378.417 l
137.684 378.358 l
138.797 378.329 l
139.911 378.27 l
141.025 378.241 l
142.139 378.212 l
144.366 378.153 l
145.509 378.153 l
146.623 378.124 l
147.736 378.095 l
149.964 378.095 l
151.078 378.065 l
153.305 378.065 l
154.419 378.036 l
158.874 378.036 l
0  setgray
S
58.844 413.905 m
/N11 [10.339 0 0 10.338 0 0] Tf
(b.)
[6.31705 2.87424 ] pdfxs
68.0354 413.905 m
/N24 [10.339 0 0 10.338 0 0] Tf
( Paul \(m=4\))
[2.87424 6.89604 5.74848 5.74848 2.2951 2.87424 3.44281 8.61231 6.03797 5.74848 3.44281 
] pdfxs
0.292999 w
n
185.983 350.929 m
275.198 350.929 l
185.983 350.929 m
185.983 353.274 l
S
181.387 338.035 m
(-2)
[3.44281 5.74848 ] pdfxs
n
208.287 350.929 m
208.287 353.274 l
S
203.691 338.035 m
(-1)
[3.44281 5.74848 ] pdfxs
n
230.59 350.929 m
230.59 353.274 l
S
227.716 338.035 m
(0) show
n
252.894 350.929 m
252.894 353.274 l
S
250.02 338.035 m
(1) show
n
275.198 350.929 m
275.198 353.274 l
S
272.323 338.035 m
(2) show
n
197.12 350.929 m
197.12 352.101 l
219.424 350.929 m
219.424 352.101 l
241.728 350.929 m
241.728 352.101 l
264.031 350.929 m
264.031 352.101 l
185.983 350.929 m
185.983 409.626 l
185.983 350.929 m
189.559 350.929 l
S
177.538 350.929 m
(0) show
n
185.983 370.475 m
189.559 370.475 l
S
177.538 367.047 m
(2) show
n
185.983 390.051 m
189.559 390.051 l
S
177.538 386.622 m
(4) show
n
185.983 409.626 m
189.559 409.626 l
S
177.538 403.59 m
(6) show
n
185.983 360.688 m
187.771 360.688 l
185.983 380.263 m
187.771 380.263 l
185.983 399.839 m
187.771 399.839 l
S
0.585999 w
n
185.983 350.929 m
230.59 350.929 l
231.704 350.988 l
232.789 351.633 l
233.902 353.567 l
235.016 357.025 l
236.13 361.831 l
237.243 367.486 l
238.357 373.377 l
239.471 378.944 l
240.555 383.75 l
241.669 387.531 l
242.783 390.139 l
243.896 391.545 l
245.01 391.868 l
246.124 391.223 l
247.237 389.758 l
248.322 387.707 l
249.436 385.216 l
250.549 382.461 l
251.663 379.56 l
252.777 376.629 l
253.89 373.787 l
255.004 371.062 l
256.089 368.541 l
257.202 366.197 l
258.316 364.087 l
259.43 362.182 l
260.543 360.483 l
261.657 359.017 l
262.771 357.728 l
263.855 356.644 l
264.969 355.677 l
266.083 354.885 l
267.196 354.182 l
268.31 353.625 l
269.424 353.127 l
270.538 352.746 l
271.622 352.395 l
272.736 352.131 l
273.849 351.896 l
274.963 351.72 l
275.198 351.662 l
S
0.292999 w
[1.172 2.931 ] 0 d
n
230.59 350.929 m
230.59 409.626 l
S
[] 0 d
n
69.688 257.887 m
158.873 257.887 l
69.688 257.887 m
69.688 260.232 l
S
65.092 244.993 m
(-4)
[3.44281 5.74848 ] pdfxs
n
91.962 257.887 m
91.962 260.232 l
S
87.367 244.993 m
(-2)
[3.44281 5.74848 ] pdfxs
n
114.266 257.887 m
114.266 260.232 l
S
111.392 244.993 m
(0) show
n
136.57 257.887 m
136.57 260.232 l
S
133.695 244.993 m
(2) show
n
158.873 257.887 m
158.873 260.232 l
S
155.999 244.993 m
(4) show
n
80.825 257.887 m
80.825 259.059 l
103.129 257.887 m
103.129 259.059 l
125.432 257.887 m
125.432 259.059 l
147.736 257.887 m
147.736 259.059 l
69.688 257.887 m
69.688 316.584 l
69.688 257.887 m
73.234 257.887 l
S
49.148 257.887 m
(-0.3)
[3.44281 5.74848 2.87424 5.74848 ] pdfxs
n
69.688 284.965 m
73.234 284.965 l
S
52.591 281.536 m
(0.0)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 312.042 m
73.234 312.042 l
S
52.591 308.613 m
(0.3)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 271.426 m
71.447 271.426 l
69.688 298.503 m
71.447 298.503 l
69.688 284.965 m
158.873 284.965 l
S
0.585999 w
n
69.688 284.847 m
70.802 284.789 l
71.916 284.73 l
73.029 284.642 l
74.143 284.525 l
75.257 284.349 l
76.37 284.144 l
77.484 283.91 l
78.598 283.587 l
79.712 283.206 l
80.825 282.767 l
81.939 282.239 l
83.053 281.595 l
84.166 280.891 l
85.28 280.1 l
86.394 279.25 l
88.621 277.433 l
89.735 276.496 l
90.849 275.646 l
91.963 274.913 l
93.076 274.327 l
94.219 273.975 l
95.333 273.917 l
96.447 274.21 l
97.56 274.913 l
98.674 276.056 l
99.788 277.638 l
100.902 279.66 l
102.015 282.122 l
103.129 284.965 l
104.243 288.1 l
105.356 291.441 l
106.47 294.84 l
107.584 298.21 l
108.698 301.346 l
109.811 304.159 l
110.925 306.503 l
112.039 308.262 l
113.153 309.375 l
114.266 309.727 l
115.38 309.375 l
116.494 308.262 l
117.607 306.503 l
118.721 304.159 l
119.864 301.346 l
120.978 298.21 l
122.092 294.84 l
123.205 291.441 l
124.319 288.1 l
125.433 284.965 l
126.546 282.122 l
127.66 279.66 l
128.774 277.638 l
129.888 276.056 l
131.001 274.913 l
132.115 274.21 l
133.229 273.917 l
134.343 273.975 l
135.456 274.327 l
136.57 274.913 l
137.684 275.646 l
138.797 276.496 l
139.911 277.433 l
142.139 279.25 l
143.252 280.1 l
144.366 280.891 l
145.509 281.595 l
146.623 282.239 l
147.736 282.767 l
148.85 283.206 l
149.964 283.587 l
151.078 283.91 l
152.191 284.144 l
153.305 284.349 l
154.419 284.525 l
155.533 284.642 l
156.646 284.73 l
157.76 284.789 l
158.874 284.847 l
S
58.844 320.863 m
/N11 [10.339 0 0 10.338 0 0] Tf
(c.)
[5.74848 2.87424 ] pdfxs
67.4667 320.863 m
/N24 [10.339 0 0 10.338 0 0] Tf
( DOG \(m=2\))
[2.87424 7.4646 8.04374 8.04374 2.87424 3.44281 8.61231 6.03797 5.74848 3.44281 ] pdfxs
0.292999 w
n
185.983 257.887 m
275.198 257.887 l
185.983 257.887 m
185.983 260.232 l
S
181.387 244.993 m
(-2)
[3.44281 5.74848 ] pdfxs
n
208.287 257.887 m
208.287 260.232 l
S
203.691 244.993 m
(-1)
[3.44281 5.74848 ] pdfxs
n
230.59 257.887 m
230.59 260.232 l
S
227.716 244.993 m
(0) show
n
252.894 257.887 m
252.894 260.232 l
S
250.02 244.993 m
(1) show
n
275.198 257.887 m
275.198 260.232 l
S
272.323 244.993 m
(2) show
n
197.12 257.887 m
197.12 259.059 l
219.424 257.887 m
219.424 259.059 l
241.728 257.887 m
241.728 259.059 l
264.031 257.887 m
264.031 259.059 l
185.983 257.887 m
185.983 316.584 l
185.983 257.887 m
189.559 257.887 l
S
177.538 257.887 m
(0) show
n
185.983 277.433 m
189.559 277.433 l
S
177.538 274.005 m
(2) show
n
185.983 297.009 m
189.559 297.009 l
S
177.538 293.58 m
(4) show
n
185.983 316.584 m
189.559 316.584 l
S
177.538 310.548 m
(6) show
n
185.983 267.646 m
187.771 267.646 l
185.983 287.221 m
187.771 287.221 l
185.983 306.797 m
187.771 306.797 l
S
0.585999 w
n
185.983 257.887 m
213.943 257.887 l
215.057 257.975 l
216.171 258.151 l
217.284 258.708 l
218.369 260.026 l
219.483 262.84 l
220.596 268.056 l
221.71 276.32 l
222.824 287.25 l
223.937 298.621 l
225.051 306.298 l
226.136 306.005 l
227.249 295.983 l
228.363 279.485 l
229.477 264.129 l
230.59 257.887 l
231.704 264.129 l
232.789 279.485 l
233.902 295.983 l
235.016 306.005 l
236.13 306.298 l
237.243 298.621 l
238.357 287.25 l
239.471 276.32 l
240.555 268.056 l
241.669 262.84 l
242.783 260.026 l
243.896 258.708 l
245.01 258.151 l
246.124 257.975 l
247.237 257.887 l
275.198 257.887 l
S
0.292999 w
[1.172 2.931 ] 0 d
n
230.59 257.887 m
230.59 316.584 l
S
[] 0 d
n
69.688 164.845 m
158.873 164.845 l
69.688 164.845 m
69.688 167.189 l
S
65.092 151.951 m
(-4)
[3.44281 5.74848 ] pdfxs
n
91.962 164.845 m
91.962 167.189 l
S
87.367 151.951 m
(-2)
[3.44281 5.74848 ] pdfxs
n
114.266 164.845 m
114.266 167.189 l
S
111.392 151.951 m
(0) show
n
136.57 164.845 m
136.57 167.189 l
S
133.695 151.951 m
(2) show
n
158.873 164.845 m
158.873 167.189 l
S
155.999 151.951 m
(4) show
n
80.825 164.845 m
80.825 166.017 l
103.129 164.845 m
103.129 166.017 l
125.432 164.845 m
125.432 166.017 l
147.736 164.845 m
147.736 166.017 l
S
105.932 135.503 m
(t / s)
[2.87424 2.87424 2.87424 2.87424 5.1695 ] pdfxs
n
69.688 164.845 m
69.688 223.542 l
69.688 164.845 m
73.234 164.845 l
S
49.148 164.845 m
(-0.3)
[3.44281 5.74848 2.87424 5.74848 ] pdfxs
n
69.688 191.922 m
73.234 191.922 l
S
52.591 188.494 m
(0.0)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 219 m
73.234 219 l
S
52.591 215.571 m
(0.3)
[5.74848 2.87424 5.74848 ] pdfxs
n
69.688 178.384 m
71.447 178.384 l
69.688 205.461 m
71.447 205.461 l
69.688 191.922 m
158.873 191.922 l
S
0.585999 w
n
69.688 191.395 m
70.802 191.307 l
71.916 191.278 l
73.029 191.278 l
74.143 191.336 l
75.257 191.454 l
76.37 191.688 l
77.484 192.01 l
78.598 192.45 l
79.712 193.036 l
80.825 193.71 l
81.939 194.501 l
83.053 195.351 l
84.166 196.172 l
85.28 196.934 l
86.394 197.52 l
87.508 197.813 l
88.621 197.754 l
89.735 197.197 l
90.849 196.113 l
91.963 194.443 l
93.076 192.186 l
94.219 189.49 l
95.333 186.413 l
96.447 183.19 l
97.56 180.054 l
98.674 177.329 l
99.788 175.277 l
100.902 174.164 l
102.015 174.222 l
103.129 175.6 l
104.243 178.296 l
105.356 182.252 l
106.47 187.234 l
107.584 192.89 l
108.698 198.868 l
109.811 204.641 l
110.925 209.74 l
112.039 213.725 l
113.153 216.304 l
114.266 217.183 l
115.38 216.304 l
116.494 213.725 l
117.607 209.74 l
118.721 204.641 l
119.864 198.868 l
120.978 192.89 l
122.092 187.234 l
123.205 182.252 l
124.319 178.296 l
125.433 175.6 l
126.546 174.222 l
127.66 174.164 l
128.774 175.277 l
129.888 177.329 l
131.001 180.054 l
132.115 183.19 l
133.229 186.413 l
134.343 189.49 l
135.456 192.186 l
136.57 194.443 l
137.684 196.113 l
138.797 197.197 l
139.911 197.754 l
141.025 197.813 l
142.139 197.52 l
143.252 196.934 l
144.366 196.172 l
145.509 195.351 l
146.623 194.501 l
147.736 193.71 l
148.85 193.036 l
149.964 192.45 l
151.078 192.01 l
152.191 191.688 l
153.305 191.454 l
154.419 191.336 l
155.533 191.278 l
156.646 191.278 l
157.76 191.307 l
158.874 191.395 l
S
58.844 227.821 m
/N11 [10.339 0 0 10.338 0 0] Tf
(d.)
[6.31705 2.87424 ] pdfxs
68.0354 227.821 m
/N24 [10.339 0 0 10.338 0 0] Tf
( DOG \(m=6\))
[2.87424 7.4646 8.04374 8.04374 2.87424 3.44281 8.61231 6.03797 5.74848 3.44281 ] pdfxs
0.292999 w
n
185.983 164.845 m
275.198 164.845 l
185.983 164.845 m
185.983 167.189 l
S
181.387 151.951 m
(-2)
[3.44281 5.74848 ] pdfxs
n
208.287 164.845 m
208.287 167.189 l
S
203.691 151.951 m
(-1)
[3.44281 5.74848 ] pdfxs
n
230.59 164.845 m
230.59 167.189 l
S
227.716 151.951 m
(0) show
n
252.894 164.845 m
252.894 167.189 l
S
250.02 151.951 m
(1) show
n
275.198 164.845 m
275.198 167.189 l
S
272.323 151.951 m
(2) show
n
197.12 164.845 m
197.12 166.017 l
219.424 164.845 m
219.424 166.017 l
241.728 164.845 m
241.728 166.017 l
264.031 164.845 m
264.031 166.017 l
S
210.134 135.503 m
(s) show
218.178 135.503 m
/N16 [10.339 0 0 10.338 0 0] Tf
(w) show
225.27 135.503 m
/N24 [10.339 0 0 10.338 0 0] Tf
( / \(2)
[2.87424 2.87424 2.87424 3.44281 5.74848 ] pdfxs
243.085 135.503 m
/N16 [10.339 0 0 10.338 0 0] Tf
(p) show
248.761 135.503 m
/N24 [10.339 0 0 10.338 0 0] Tf
(\)) show
n
185.983 164.845 m
185.983 223.542 l
185.983 164.845 m
189.559 164.845 l
S
177.538 164.845 m
(0) show
n
185.983 184.391 m
189.559 184.391 l
S
177.538 180.963 m
(2) show
n
185.983 203.967 m
189.559 203.967 l
S
177.538 200.538 m
(4) show
n
185.983 223.542 m
189.559 223.542 l
S
177.538 217.505 m
(6) show
n
185.983 174.603 m
187.771 174.603 l
185.983 194.179 m
187.771 194.179 l
185.983 213.754 m
187.771 213.754 l
S
0.585999 w
n
185.983 164.845 m
210.602 164.845 l
211.716 164.904 l
212.83 165.109 l
213.943 165.636 l
215.057 167.072 l
216.171 170.178 l
217.284 176.039 l
218.369 185.27 l
219.483 197.051 l
220.596 208.128 l
221.71 213.842 l
222.824 210.619 l
223.937 199.102 l
225.051 184.479 l
226.136 172.816 l
227.249 166.838 l
228.363 165.05 l
229.477 164.845 l
231.704 164.845 l
232.789 165.05 l
233.902 166.838 l
235.016 172.816 l
236.13 184.479 l
237.243 199.102 l
238.357 210.619 l
239.471 213.842 l
240.555 208.128 l
241.669 197.051 l
242.783 185.27 l
243.896 176.039 l
245.01 170.178 l
246.124 167.072 l
247.237 165.636 l
248.322 165.109 l
249.436 164.904 l
250.549 164.845 l
275.198 164.845 l
S
0.292999 w
[1.172 2.931 ] 0 d
n
230.59 164.845 m
230.59 223.542 l
S
PDFVars/TermAll get exec end end
%%PageTrailer
%%EndPage
%%Trailer
%%DocumentNeededResources:
%%+ font Times-Roman
%%+ font Helvetica
%%+ font Times-Italic
%%+ font Helvetica-Bold
%%+ font Symbol
%%+ font Times-Italic
%%+ font Times-Roman
%%EOF
